/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// LimitsSettingsApplyConfiguration represents a declarative configuration of the LimitsSettings type for use
// with apply.
type LimitsSettingsApplyConfiguration struct {
	CommonResourceApplyConfiguration `json:",inline"`
	LimitRequestRatio                *resource.Quantity `json:"limitRequestRatio,omitempty"`
}

// LimitsSettingsApplyConfiguration constructs a declarative configuration of the LimitsSettings type for use with
// apply.
func LimitsSettings() *LimitsSettingsApplyConfiguration {
	return &LimitsSettingsApplyConfiguration{}
}

// WithMin sets the Min field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Min field is set to the value of the last call.
func (b *LimitsSettingsApplyConfiguration) WithMin(value resource.Quantity) *LimitsSettingsApplyConfiguration {
	b.CommonResourceApplyConfiguration.Min = &value
	return b
}

// WithMax sets the Max field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Max field is set to the value of the last call.
func (b *LimitsSettingsApplyConfiguration) WithMax(value resource.Quantity) *LimitsSettingsApplyConfiguration {
	b.CommonResourceApplyConfiguration.Max = &value
	return b
}

// WithPatchPath sets the PatchPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PatchPath field is set to the value of the last call.
func (b *LimitsSettingsApplyConfiguration) WithPatchPath(value string) *LimitsSettingsApplyConfiguration {
	b.CommonResourceApplyConfiguration.PatchPath = &value
	return b
}

// WithPatchFormat sets the PatchFormat field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PatchFormat field is set to the value of the last call.
func (b *LimitsSettingsApplyConfiguration) WithPatchFormat(value string) *LimitsSettingsApplyConfiguration {
	b.CommonResourceApplyConfiguration.PatchFormat = &value
	return b
}

// WithLimitRequestRatio sets the LimitRequestRatio field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LimitRequestRatio field is set to the value of the last call.
func (b *LimitsSettingsApplyConfiguration) WithLimitRequestRatio(value resource.Quantity) *LimitsSettingsApplyConfiguration {
	b.LimitRequestRatio = &value
	return b
}
